name: digital_twins
on:
  workflow_call:
    secrets:
        ACCESS_TOKEN:
          required: true
        ARGOCD_HOSTNAME:
          required: true
        ARGOCD_PASSWORD:
          required: true

jobs:
  digital_twins_main_version:
        name: digital_twins_main_version
        runs-on: self-hosted
        steps:
        - name: pulling 5gplustactile/deployment-digital-twins repository     
          uses: actions/checkout@v3
          with:
            repository: '5gplustactile/deployment-digital-twins'
            ref: main
            fetch-depth: 0
            token: ${{ secrets.ACCESS_TOKEN }}

        - name: Installing dependencies        
          env:
            GIT_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          run: |
           echo "### install yq ###"
           sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
           sudo chmod a+x /usr/local/bin/yq
           yq --version

        # extract branch name
        - name: Extract branch name
          shell: bash
          run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          id: extract_branch

        - name: Get branch name
          run: echo 'The branch name is' ${{ steps.extract_branch.outputs.branch }}

        - name: Get branch name - filtered
          id: get_branch
          run: |
            if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
              echo "::set-output name=branch::${{ github.event.pull_request.head.ref }}"
            else
              echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
            fi

        - name: Use branch name - filtered
          run: |
            BRANCH_NAME=${{ steps.get_branch.outputs.branch }}
            echo "BRANCH_DT=$(echo $BRANCH_NAME | cut -d/ -f2)" >> $GITHUB_ENV

        - name: Get branch name
          run: |
            echo 'The branch name is' ${{ env.BRANCH_DT }}

        - name: check repoURL and targetRevision main.yaml file
          run: |
            #!/bin/bash
  
            # Parse the YAML file using yq to get the repoURL
            repoURL=$(yq e '.spec.source.repoURL' ${{ env.BRANCH_DT }}/main.yaml)
            
            # Check if the repoURL contains the string "5gplustactile" after "https://"
            if echo "$repoURL" | grep -q "https://.*5gplustactile"; then
                echo "The repoURL contains '5gplustactile' after 'https://', so. It is local repo"
                echo "REPO_IS_LOCAL=true" >> $GITHUB_ENV

                #yq eval '.spec.syncPolicy.automated = {} | .spec.source.targetRevision = "main"' ${{ env.BRANCH_DT }}/main.yaml -i
                yq eval '.spec.source.targetRevision = "main"' ${{ env.BRANCH_DT }}/main.yaml -i

                echo "#### cat of cat ${{ env.BRANCH_DT }}/main.yaml ###"
                cat ${{ env.BRANCH_DT }}/main.yaml
            else
                echo "The repoURL does not contain '5gplustactile' after 'https://', so, the repoURL is external repo..Skipping"
                echo "REPO_IS_LOCAL=false" >> $GITHUB_ENV
            fi

        - name: commit changes in 5gplustactile/digital-twins repository
          if: ${{ env.REPO_IS_LOCAL == 'true' }} 
          env:
            CI_COMMIT_MESSAGE: updation digital twins app in main version
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"  
            git add .
            git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}" --allow-empty


        - name: push changes in 5gplustactile/deployment-digital-twins repository
          if: ${{ env.REPO_IS_LOCAL == 'true' }}   
          uses: ad-m/github-push-action@master
          with:
            branch: main
            repository: '5gplustactile/deployment-digital-twins'
            github_token: ${{ secrets.ACCESS_TOKEN }}
